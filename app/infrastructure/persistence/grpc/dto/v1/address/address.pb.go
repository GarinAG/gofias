// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: app/interfaces/grpc/proto/v1/address/address.proto

package address

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *GuidRequest) Reset() {
	*x = GuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidRequest) ProtoMessage() {}

func (x *GuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidRequest.ProtoReflect.Descriptor instead.
func (*GuidRequest) Descriptor() ([]byte, []int) {
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP(), []int{0}
}

func (x *GuidRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type TermRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	From int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *TermRequest) Reset() {
	*x = TermRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermRequest) ProtoMessage() {}

func (x *TermRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermRequest.ProtoReflect.Descriptor instead.
func (*TermRequest) Descriptor() ([]byte, []int) {
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP(), []int{1}
}

func (x *TermRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *TermRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TermRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

type SimpleTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SimpleTerm) Reset() {
	*x = SimpleTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleTerm) ProtoMessage() {}

func (x *SimpleTerm) ProtoReflect() protoreflect.Message {
	mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleTerm.ProtoReflect.Descriptor instead.
func (*SimpleTerm) Descriptor() ([]byte, []int) {
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleTerm) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *SimpleTerm) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AddressListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Address `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AddressListResponse) Reset() {
	*x = AddressListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressListResponse) ProtoMessage() {}

func (x *AddressListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressListResponse.ProtoReflect.Descriptor instead.
func (*AddressListResponse) Descriptor() ([]byte, []int) {
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP(), []int{3}
}

func (x *AddressListResponse) GetItems() []*Address {
	if x != nil {
		return x.Items
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FiasId            string  `protobuf:"bytes,2,opt,name=FiasId,proto3" json:"FiasId,omitempty"`
	FiasLevel         string  `protobuf:"bytes,3,opt,name=FiasLevel,proto3" json:"FiasLevel,omitempty"`
	ParentFiasId      string  `protobuf:"bytes,4,opt,name=ParentFiasId,proto3" json:"ParentFiasId,omitempty"`
	ShortName         string  `protobuf:"bytes,5,opt,name=ShortName,proto3" json:"ShortName,omitempty"`
	FormalName        string  `protobuf:"bytes,6,opt,name=FormalName,proto3" json:"FormalName,omitempty"`
	PostalCode        string  `protobuf:"bytes,7,opt,name=PostalCode,proto3" json:"PostalCode,omitempty"`
	FullName          string  `protobuf:"bytes,8,opt,name=FullName,proto3" json:"FullName,omitempty"`
	FullAddress       string  `protobuf:"bytes,9,opt,name=FullAddress,proto3" json:"FullAddress,omitempty"`
	KladrId           string  `protobuf:"bytes,10,opt,name=KladrId,proto3" json:"KladrId,omitempty"`
	RegionFiasId      string  `protobuf:"bytes,11,opt,name=RegionFiasId,proto3" json:"RegionFiasId,omitempty"`
	RegionKladrId     string  `protobuf:"bytes,12,opt,name=RegionKladrId,proto3" json:"RegionKladrId,omitempty"`
	Region            string  `protobuf:"bytes,13,opt,name=Region,proto3" json:"Region,omitempty"`
	RegionType        string  `protobuf:"bytes,14,opt,name=RegionType,proto3" json:"RegionType,omitempty"`
	RegionFull        string  `protobuf:"bytes,15,opt,name=RegionFull,proto3" json:"RegionFull,omitempty"`
	AreaFiasId        string  `protobuf:"bytes,16,opt,name=AreaFiasId,proto3" json:"AreaFiasId,omitempty"`
	AreaKladrId       string  `protobuf:"bytes,17,opt,name=AreaKladrId,proto3" json:"AreaKladrId,omitempty"`
	Area              string  `protobuf:"bytes,18,opt,name=Area,proto3" json:"Area,omitempty"`
	AreaType          string  `protobuf:"bytes,19,opt,name=AreaType,proto3" json:"AreaType,omitempty"`
	AreaFull          string  `protobuf:"bytes,20,opt,name=AreaFull,proto3" json:"AreaFull,omitempty"`
	CityFiasId        string  `protobuf:"bytes,21,opt,name=CityFiasId,proto3" json:"CityFiasId,omitempty"`
	CityKladrId       string  `protobuf:"bytes,22,opt,name=CityKladrId,proto3" json:"CityKladrId,omitempty"`
	City              string  `protobuf:"bytes,23,opt,name=City,proto3" json:"City,omitempty"`
	CityType          string  `protobuf:"bytes,24,opt,name=CityType,proto3" json:"CityType,omitempty"`
	CityFull          string  `protobuf:"bytes,25,opt,name=CityFull,proto3" json:"CityFull,omitempty"`
	SettlementFiasId  string  `protobuf:"bytes,26,opt,name=SettlementFiasId,proto3" json:"SettlementFiasId,omitempty"`
	SettlementKladrId string  `protobuf:"bytes,27,opt,name=SettlementKladrId,proto3" json:"SettlementKladrId,omitempty"`
	Settlement        string  `protobuf:"bytes,28,opt,name=Settlement,proto3" json:"Settlement,omitempty"`
	SettlementType    string  `protobuf:"bytes,29,opt,name=SettlementType,proto3" json:"SettlementType,omitempty"`
	SettlementFull    string  `protobuf:"bytes,30,opt,name=SettlementFull,proto3" json:"SettlementFull,omitempty"`
	StreetFiasId      string  `protobuf:"bytes,31,opt,name=StreetFiasId,proto3" json:"StreetFiasId,omitempty"`
	StreetKladrId     string  `protobuf:"bytes,32,opt,name=StreetKladrId,proto3" json:"StreetKladrId,omitempty"`
	Street            string  `protobuf:"bytes,33,opt,name=Street,proto3" json:"Street,omitempty"`
	StreetType        string  `protobuf:"bytes,34,opt,name=StreetType,proto3" json:"StreetType,omitempty"`
	StreetFull        string  `protobuf:"bytes,35,opt,name=StreetFull,proto3" json:"StreetFull,omitempty"`
	HouseFiasId       string  `protobuf:"bytes,36,opt,name=HouseFiasId,proto3" json:"HouseFiasId,omitempty"`
	HouseKladrId      string  `protobuf:"bytes,37,opt,name=HouseKladrId,proto3" json:"HouseKladrId,omitempty"`
	House             string  `protobuf:"bytes,38,opt,name=House,proto3" json:"House,omitempty"`
	HouseType         string  `protobuf:"bytes,39,opt,name=HouseType,proto3" json:"HouseType,omitempty"`
	HouseFull         string  `protobuf:"bytes,40,opt,name=HouseFull,proto3" json:"HouseFull,omitempty"`
	GeoLat            float32 `protobuf:"fixed32,41,opt,name=GeoLat,proto3" json:"GeoLat,omitempty"`
	GeoLon            float32 `protobuf:"fixed32,42,opt,name=GeoLon,proto3" json:"GeoLon,omitempty"`
	Okato             string  `protobuf:"bytes,43,opt,name=Okato,proto3" json:"Okato,omitempty"`
	Oktmo             string  `protobuf:"bytes,44,opt,name=Oktmo,proto3" json:"Oktmo,omitempty"`
	UpdatedDate       string  `protobuf:"bytes,45,opt,name=UpdatedDate,proto3" json:"UpdatedDate,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP(), []int{4}
}

func (x *Address) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Address) GetFiasId() string {
	if x != nil {
		return x.FiasId
	}
	return ""
}

func (x *Address) GetFiasLevel() string {
	if x != nil {
		return x.FiasLevel
	}
	return ""
}

func (x *Address) GetParentFiasId() string {
	if x != nil {
		return x.ParentFiasId
	}
	return ""
}

func (x *Address) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Address) GetFormalName() string {
	if x != nil {
		return x.FormalName
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Address) GetFullAddress() string {
	if x != nil {
		return x.FullAddress
	}
	return ""
}

func (x *Address) GetKladrId() string {
	if x != nil {
		return x.KladrId
	}
	return ""
}

func (x *Address) GetRegionFiasId() string {
	if x != nil {
		return x.RegionFiasId
	}
	return ""
}

func (x *Address) GetRegionKladrId() string {
	if x != nil {
		return x.RegionKladrId
	}
	return ""
}

func (x *Address) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Address) GetRegionType() string {
	if x != nil {
		return x.RegionType
	}
	return ""
}

func (x *Address) GetRegionFull() string {
	if x != nil {
		return x.RegionFull
	}
	return ""
}

func (x *Address) GetAreaFiasId() string {
	if x != nil {
		return x.AreaFiasId
	}
	return ""
}

func (x *Address) GetAreaKladrId() string {
	if x != nil {
		return x.AreaKladrId
	}
	return ""
}

func (x *Address) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *Address) GetAreaType() string {
	if x != nil {
		return x.AreaType
	}
	return ""
}

func (x *Address) GetAreaFull() string {
	if x != nil {
		return x.AreaFull
	}
	return ""
}

func (x *Address) GetCityFiasId() string {
	if x != nil {
		return x.CityFiasId
	}
	return ""
}

func (x *Address) GetCityKladrId() string {
	if x != nil {
		return x.CityKladrId
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetCityType() string {
	if x != nil {
		return x.CityType
	}
	return ""
}

func (x *Address) GetCityFull() string {
	if x != nil {
		return x.CityFull
	}
	return ""
}

func (x *Address) GetSettlementFiasId() string {
	if x != nil {
		return x.SettlementFiasId
	}
	return ""
}

func (x *Address) GetSettlementKladrId() string {
	if x != nil {
		return x.SettlementKladrId
	}
	return ""
}

func (x *Address) GetSettlement() string {
	if x != nil {
		return x.Settlement
	}
	return ""
}

func (x *Address) GetSettlementType() string {
	if x != nil {
		return x.SettlementType
	}
	return ""
}

func (x *Address) GetSettlementFull() string {
	if x != nil {
		return x.SettlementFull
	}
	return ""
}

func (x *Address) GetStreetFiasId() string {
	if x != nil {
		return x.StreetFiasId
	}
	return ""
}

func (x *Address) GetStreetKladrId() string {
	if x != nil {
		return x.StreetKladrId
	}
	return ""
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetStreetType() string {
	if x != nil {
		return x.StreetType
	}
	return ""
}

func (x *Address) GetStreetFull() string {
	if x != nil {
		return x.StreetFull
	}
	return ""
}

func (x *Address) GetHouseFiasId() string {
	if x != nil {
		return x.HouseFiasId
	}
	return ""
}

func (x *Address) GetHouseKladrId() string {
	if x != nil {
		return x.HouseKladrId
	}
	return ""
}

func (x *Address) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *Address) GetHouseType() string {
	if x != nil {
		return x.HouseType
	}
	return ""
}

func (x *Address) GetHouseFull() string {
	if x != nil {
		return x.HouseFull
	}
	return ""
}

func (x *Address) GetGeoLat() float32 {
	if x != nil {
		return x.GeoLat
	}
	return 0
}

func (x *Address) GetGeoLon() float32 {
	if x != nil {
		return x.GeoLon
	}
	return 0
}

func (x *Address) GetOkato() string {
	if x != nil {
		return x.Okato
	}
	return ""
}

func (x *Address) GetOktmo() string {
	if x != nil {
		return x.Oktmo
	}
	return ""
}

func (x *Address) GetUpdatedDate() string {
	if x != nil {
		return x.UpdatedDate
	}
	return ""
}

var File_app_interfaces_grpc_proto_v1_address_address_proto protoreflect.FileDescriptor

var file_app_interfaces_grpc_proto_v1_address_address_proto_rawDesc = []byte{
	0x0a, 0x32, 0x61, 0x70, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x47,
	0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x49,
	0x0a, 0x0b, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x40, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xe9, 0x0a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x61, 0x73, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x61, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x61,
	0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x61, 0x73, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4b, 0x6c, 0x61, 0x64, 0x72,
	0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x72, 0x65, 0x61, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x69, 0x74, 0x79, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x69, 0x74, 0x79, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x69, 0x74, 0x79, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x69, 0x74, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x6c,
	0x61, 0x64, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x46,
	0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x46, 0x69, 0x61, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x4b, 0x6c, 0x61, 0x64, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x65, 0x6f, 0x4c, 0x61, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x47, 0x65, 0x6f, 0x4c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6f, 0x4c, 0x6f,
	0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x6b, 0x61, 0x74, 0x6f, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4f, 0x6b, 0x61, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x6b, 0x74, 0x6d, 0x6f, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x6b, 0x74, 0x6d, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x32, 0xfb, 0x04,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x75, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x2f, 0x7b, 0x74, 0x65,
	0x72, 0x6d, 0x7d, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x75,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x67, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x5f,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x68, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x54, 0x65,
	0x72, 0x6d, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x73, 0x42, 0x34, 0x5a, 0x32, 0x61,
	0x70, 0x70, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescOnce sync.Once
	file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescData = file_app_interfaces_grpc_proto_v1_address_address_proto_rawDesc
)

func file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescGZIP() []byte {
	file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescOnce.Do(func() {
		file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescData)
	})
	return file_app_interfaces_grpc_proto_v1_address_address_proto_rawDescData
}

var file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_app_interfaces_grpc_proto_v1_address_address_proto_goTypes = []interface{}{
	(*GuidRequest)(nil),         // 0: address_v1.GuidRequest
	(*TermRequest)(nil),         // 1: address_v1.TermRequest
	(*SimpleTerm)(nil),          // 2: address_v1.SimpleTerm
	(*AddressListResponse)(nil), // 3: address_v1.AddressListResponse
	(*Address)(nil),             // 4: address_v1.Address
	(*empty.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_app_interfaces_grpc_proto_v1_address_address_proto_depIdxs = []int32{
	4, // 0: address_v1.AddressListResponse.items:type_name -> address_v1.Address
	1, // 1: address_v1.AddressHandler.GetAddressByTerm:input_type -> address_v1.TermRequest
	1, // 2: address_v1.AddressHandler.GetAddressByPostal:input_type -> address_v1.TermRequest
	0, // 3: address_v1.AddressHandler.GetByGuid:input_type -> address_v1.GuidRequest
	5, // 4: address_v1.AddressHandler.GetAllCities:input_type -> google.protobuf.Empty
	1, // 5: address_v1.AddressHandler.GetCitiesByTerm:input_type -> address_v1.TermRequest
	2, // 6: address_v1.AddressHandler.GetSuggests:input_type -> address_v1.SimpleTerm
	3, // 7: address_v1.AddressHandler.GetAddressByTerm:output_type -> address_v1.AddressListResponse
	3, // 8: address_v1.AddressHandler.GetAddressByPostal:output_type -> address_v1.AddressListResponse
	4, // 9: address_v1.AddressHandler.GetByGuid:output_type -> address_v1.Address
	3, // 10: address_v1.AddressHandler.GetAllCities:output_type -> address_v1.AddressListResponse
	3, // 11: address_v1.AddressHandler.GetCitiesByTerm:output_type -> address_v1.AddressListResponse
	3, // 12: address_v1.AddressHandler.GetSuggests:output_type -> address_v1.AddressListResponse
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_app_interfaces_grpc_proto_v1_address_address_proto_init() }
func file_app_interfaces_grpc_proto_v1_address_address_proto_init() {
	if File_app_interfaces_grpc_proto_v1_address_address_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_interfaces_grpc_proto_v1_address_address_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_interfaces_grpc_proto_v1_address_address_proto_goTypes,
		DependencyIndexes: file_app_interfaces_grpc_proto_v1_address_address_proto_depIdxs,
		MessageInfos:      file_app_interfaces_grpc_proto_v1_address_address_proto_msgTypes,
	}.Build()
	File_app_interfaces_grpc_proto_v1_address_address_proto = out.File
	file_app_interfaces_grpc_proto_v1_address_address_proto_rawDesc = nil
	file_app_interfaces_grpc_proto_v1_address_address_proto_goTypes = nil
	file_app_interfaces_grpc_proto_v1_address_address_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddressHandlerClient is the client API for AddressHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddressHandlerClient interface {
	GetAddressByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error)
	GetAddressByPostal(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error)
	GetByGuid(ctx context.Context, in *GuidRequest, opts ...grpc.CallOption) (*Address, error)
	GetAllCities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AddressListResponse, error)
	GetCitiesByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error)
	GetSuggests(ctx context.Context, in *SimpleTerm, opts ...grpc.CallOption) (*AddressListResponse, error)
}

type addressHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewAddressHandlerClient(cc grpc.ClientConnInterface) AddressHandlerClient {
	return &addressHandlerClient{cc}
}

func (c *addressHandlerClient) GetAddressByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetAddressByTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetAddressByPostal(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetAddressByPostal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetByGuid(ctx context.Context, in *GuidRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetByGuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetAllCities(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetAllCities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetCitiesByTerm(ctx context.Context, in *TermRequest, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetCitiesByTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressHandlerClient) GetSuggests(ctx context.Context, in *SimpleTerm, opts ...grpc.CallOption) (*AddressListResponse, error) {
	out := new(AddressListResponse)
	err := c.cc.Invoke(ctx, "/address_v1.AddressHandler/GetSuggests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddressHandlerServer is the server API for AddressHandler service.
type AddressHandlerServer interface {
	GetAddressByTerm(context.Context, *TermRequest) (*AddressListResponse, error)
	GetAddressByPostal(context.Context, *TermRequest) (*AddressListResponse, error)
	GetByGuid(context.Context, *GuidRequest) (*Address, error)
	GetAllCities(context.Context, *empty.Empty) (*AddressListResponse, error)
	GetCitiesByTerm(context.Context, *TermRequest) (*AddressListResponse, error)
	GetSuggests(context.Context, *SimpleTerm) (*AddressListResponse, error)
}

// UnimplementedAddressHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedAddressHandlerServer struct {
}

func (*UnimplementedAddressHandlerServer) GetAddressByTerm(context.Context, *TermRequest) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressByTerm not implemented")
}
func (*UnimplementedAddressHandlerServer) GetAddressByPostal(context.Context, *TermRequest) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressByPostal not implemented")
}
func (*UnimplementedAddressHandlerServer) GetByGuid(context.Context, *GuidRequest) (*Address, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByGuid not implemented")
}
func (*UnimplementedAddressHandlerServer) GetAllCities(context.Context, *empty.Empty) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCities not implemented")
}
func (*UnimplementedAddressHandlerServer) GetCitiesByTerm(context.Context, *TermRequest) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCitiesByTerm not implemented")
}
func (*UnimplementedAddressHandlerServer) GetSuggests(context.Context, *SimpleTerm) (*AddressListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSuggests not implemented")
}

func RegisterAddressHandlerServer(s *grpc.Server, srv AddressHandlerServer) {
	s.RegisterService(&_AddressHandler_serviceDesc, srv)
}

func _AddressHandler_GetAddressByTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetAddressByTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetAddressByTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetAddressByTerm(ctx, req.(*TermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetAddressByPostal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetAddressByPostal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetAddressByPostal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetAddressByPostal(ctx, req.(*TermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetByGuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetByGuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetByGuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetByGuid(ctx, req.(*GuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetAllCities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetAllCities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetAllCities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetAllCities(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetCitiesByTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TermRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetCitiesByTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetCitiesByTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetCitiesByTerm(ctx, req.(*TermRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressHandler_GetSuggests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SimpleTerm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressHandlerServer).GetSuggests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/address_v1.AddressHandler/GetSuggests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressHandlerServer).GetSuggests(ctx, req.(*SimpleTerm))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddressHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "address_v1.AddressHandler",
	HandlerType: (*AddressHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAddressByTerm",
			Handler:    _AddressHandler_GetAddressByTerm_Handler,
		},
		{
			MethodName: "GetAddressByPostal",
			Handler:    _AddressHandler_GetAddressByPostal_Handler,
		},
		{
			MethodName: "GetByGuid",
			Handler:    _AddressHandler_GetByGuid_Handler,
		},
		{
			MethodName: "GetAllCities",
			Handler:    _AddressHandler_GetAllCities_Handler,
		},
		{
			MethodName: "GetCitiesByTerm",
			Handler:    _AddressHandler_GetCitiesByTerm_Handler,
		},
		{
			MethodName: "GetSuggests",
			Handler:    _AddressHandler_GetSuggests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/interfaces/grpc/proto/v1/address/address.proto",
}
